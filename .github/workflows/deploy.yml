name: Build and Deploy
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Common check
        id: common-check
        run: |
          git --version
          echo $PATH
          node -v
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Get last merge sha
        id: get-last-merge-sha
        run: |
          LAST_MERGE=$(git log --merges -n 2 --format="%H" | tail -1)
          echo "LAST_MERGE: $LAST_MERGE"
          echo "last_merge=$LAST_MERGE" >> $GITHUB_OUTPUT
      - name: Check if packages directory is modified
        id: check-packages
        run: |
          echo "steps.get-last-merge-sha.outputs.last_merge: ${{ steps.get-last-merge-sha.outputs.last_merge }}"
          echo "github.sha: ${{ github.sha }}"
          # 获取提交的差异代码
          DIFF_FILES=$(git diff --name-only ${{ steps.get-last-merge-sha.outputs.last_merge }} ${{ github.sha }})
          echo "Diff files: $DIFF_FILES"

          # 检查是否存在packages目录文件的变更
          if echo $DIFF_FILES | grep -qE "packages/*"; then
            echo "Changes found in packages directory"
            echo "::set-output name=should_build::true"
          else
            echo "No changes found in packages directory"
            echo "::set-output name=should_build::false"
          fi
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.check-packages.outputs.should_build == 'true'
        run: npm install
      - name: Build
        if: steps.check-packages.outputs.should_build == 'true'
        run: |
          # 获取提交的差异代码
          DIFF_FILES=$(git diff --name-only ${{ steps.get-last-merge-sha.outputs.last_merge }} ${{ github.sha }})
          echo "Diff files: $DIFF_FILES"

          # 提取目录名
          DIRS=$(echo $DIFF_FILES | grep -oE "packages/[^/]+(/|$)" | sed 's:/[^/]*$::' | sort -u)
          echo "Build directories: $DIRS"

          # 在每个目录下执行npm run build命令
          for DIR in $DIRS; do
            cd $DIR
            echo "Building $DIR..."
            npm run build
            cd -
          done
      - name: Move build files
        if: steps.check-packages.outputs.should_build == 'true'
        run: |
          for dir in ${{ github.workspace }}/packages/*/build; do
            project_name=$(echo $dir | sed -E 's/.*\/packages\/(.*)\/build/\1/g')
            mkdir -p ${{ github.workspace }}/docs/$project_name
            mv $dir/* ${{ github.workspace }}/docs/$project_name/
          done
      - name: Commit files
        if: steps.check-packages.outputs.should_build == 'true'
        run: |
          # 提交构建产物到dist分支
          git config --global user.email "im.wangzhenxi@gmail.com"
          git config --global user.name "wangzhenxi"
          git fetch origin dist
          git checkout -b dist origin/dist
          git add -A ${{ github.workspace }}/docs
          git commit -m "auto deploy"
      - name: Push to dist branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: dist
          github_token: ${{ secrets.ACCESS_TOKEN }}
