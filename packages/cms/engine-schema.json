[{"path":"tsconfig.json","content":"\n{\n  \"compileOnSave\": false,\n  \"buildOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"outDir\": \"build\",\n    \"module\": \"esnext\",\n    \"target\": \"es6\",\n    \"jsx\": \"react\",\n    \"moduleResolution\": \"node\",\n    \"allowSyntheticDefaultImports\": true,\n    \"lib\": [\"es6\", \"dom\"],\n    \"sourceMap\": true,\n    \"allowJs\": true,\n    \"rootDir\": \"./\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"noImplicitReturns\": true,\n    \"noImplicitThis\": true,\n    \"noImplicitAny\": false,\n    \"importHelpers\": true,\n    \"strictNullChecks\": true,\n    \"suppressImplicitAnyIndexErrors\": true,\n    \"noUnusedLocals\": true,\n    \"skipLibCheck\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"],\n      \"ice\": [\".ice/index.ts\"],\n      \"ice/*\": [\".ice/pages/*\"]\n    }\n  },\n  \"include\": [\"src/*\", \".ice\"],\n  \"exclude\": [\"node_modules\", \"build\", \"public\"]\n}\n    "},{"path":".stylelintrc.js","content":"\nconst { stylelint } = require('@ice/spec');\n\nmodule.exports = stylelint;\n    "},{"path":".stylelintignore","content":"\n# 忽略目录\nbuild/\ntests/\ndemo/\n\n# node 覆盖率文件\ncoverage/\n    "},{"path":".prettierrc.js","content":"\nconst { prettier } = require('@ice/spec');\n\nmodule.exports = prettier;\n    "},{"path":".prettierignore","content":"\nbuild/\ntests/\ndemo/\n.ice/\ncoverage/\n**/*-min.js\n**/*.min.js\npackage-lock.json\nyarn.lock\n    "},{"path":"jsconfig.json","content":"\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"jsx\": \"react\",\n    \"paths\": {\n      \"@/*\": [\"./src/*\"],\n      \"ice\": [\".ice/index.ts\"],\n      \"ice/*\": [\".ice/pages/*\"]\n    }\n  }\n}\n    "},{"path":".gitignore","content":"\n# See https://help.github.com/ignore-files/ for more about ignoring files.\n\n# dependencies\nnode_modules/\n\n# production\nbuild/\ndist/\ntmp/\nlib/\n\n# misc\n.idea/\n.happypack\n.DS_Store\n*.swp\n*.dia~\n.ice\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nindex.module.scss.d.ts\n    "},{"path":".eslintrc.js","content":"\nconst { eslint } = require('@ice/spec');\n\nmodule.exports = eslint;\n    "},{"path":".eslintignore","content":"\n# 忽略目录\nbuild/\ntests/\ndemo/\n.ice/\n\n# node 覆盖率文件\ncoverage/\n\n# 忽略文件\n**/*-min.js\n**/*.min.js\n\npackage-lock.json\nyarn.lock\n    "},{"path":".editorconfig","content":"\n# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n    "},{"path":"build.json","content":"{\n  \"entry\": \"src/app.js\",\n  \"plugins\": [\n    [\n      \"build-plugin-fusion\",\n      {\n        \"themePackage\": \"@alifd/theme-design-pro\"\n      }\n    ],\n    [\n      \"build-plugin-moment-locales\",\n      {\n        \"locales\": [\n          \"zh-cn\"\n        ]\n      }\n    ]\n  ],\n  \"publicPath\": \"/pangu-dist/cms\"\n}"},{"path":"abc.json","content":"\n{\n  \"type\": \"ice-app\",\n  \"builder\": \"@ali/builder-ice-app\"\n}\n    "},{"path":"README.md","content":"\n## Scaffold Lite\n\n> 轻量级模板，使用 JavaScript，仅包含基础的 Layout。\n\n## 使用\n\n```bash\n# 安装依赖\n$ npm install\n\n# 启动服务\n$ npm start  # visit http://localhost:3333\n```\n\n[More docs](https://ice.work/docs/guide/about).\n\n## 目录\n\n```md\n├── build/                         # 构建产物\n├── mock/                          # 本地模拟数据\n│   ├── index.[j,t]s\n├── public/\n│   ├── index.html                 # 应用入口 HTML\n│   └── favicon.png                # Favicon\n├── src/                           # 源码路径\n│   ├── components/                # 自定义业务组件\n│   │   └── Guide/\n│   │       ├── index.[j,t]sx\n│   │       ├── index.module.scss\n│   ├── layouts/                   # 布局组件\n│   │   └── BasicLayout/\n│   │       ├── index.[j,t]sx\n│   │       └── index.module.scss\n│   ├── pages/                     # 页面\n│   │   └── Home/                  # home 页面，约定路由转成小写\n│   │       ├── components/        # 页面级自定义业务组件\n│   │       ├── models.[j,t]sx     # 页面级数据状态\n│   │       ├── index.[j,t]sx      # 页面入口\n│   │       └── index.module.scss  # 页面样式文件\n│   ├── configs/                   # [可选] 配置文件\n│   │   └── menu.[j,t]s            # [可选] 菜单配置\n│   ├── models/                    # [可选] 应用级数据状态\n│   │   └── user.[j,t]s\n│   ├── utils/                     # [可选] 工具库\n│   ├── global.scss                # 全局样式\n│   ├── routes.[j,t]s              # 路由配置\n│   └── app.[j,t]s[x]              # 应用入口脚本\n├── build.json                     # 工程配置\n├── README.md\n├── package.json\n├── .editorconfig\n├── .eslintignore\n├── .eslintrc.[j,t]s\n├── .gitignore\n├── .stylelintignore\n├── .stylelintrc.[j,t]s\n├── .gitignore\n└── [j,t]sconfig.json\n```\n    "},{"path":"package.json","content":"{\n  \"name\": \"cms\",\n  \"version\": \"0.0.1\",\n  \"description\": \"轻量级模板，使用 JavaScript，仅包含基础的 Layout。\",\n  \"dependencies\": {\n    \"moment\": \"^2.24.0\",\n    \"react\": \"^16.4.1\",\n    \"react-dom\": \"^16.4.1\",\n    \"react-router\": \"^5.2.1\",\n    \"@alifd/theme-design-pro\": \"^0.x\",\n    \"intl-messageformat\": \"^9.3.6\",\n    \"@ice/store\": \"^1.4.3\",\n    \"@loadable/component\": \"^5.15.2\",\n    \"@alilc/lowcode-datasource-engine\": \"^1.0.0\",\n    \"@alilc/lowcode-datasource-fetch-handler\": \"^1.0.0\",\n    \"undefined\": \"*\",\n    \"@alifd/fusion-ui\": \"1.0.8\",\n    \"@alifd/pro-layout\": \"1.0.1\",\n    \"@alifd/next\": \"1.25.51\",\n    \"@alilc/lowcode-materials\": \"1.1.0\"\n  },\n  \"devDependencies\": {\n    \"@ice/spec\": \"^1.0.0\",\n    \"build-plugin-fusion\": \"^0.1.0\",\n    \"build-plugin-moment-locales\": \"^0.1.0\",\n    \"eslint\": \"^6.0.1\",\n    \"ice.js\": \"^1.0.0\",\n    \"stylelint\": \"^13.2.0\"\n  },\n  \"scripts\": {\n    \"start\": \"icejs start\",\n    \"build\": \"icejs build\",\n    \"lint\": \"npm run eslint && npm run stylelint\",\n    \"eslint\": \"eslint --cache --ext .js,.jsx ./\",\n    \"stylelint\": \"stylelint ./**/*.scss\"\n  },\n  \"ideMode\": { \"name\": \"ice-react\" },\n  \"iceworks\": { \"type\": \"react\", \"adapter\": \"adapter-react-v3\" },\n  \"engines\": { \"node\": \">=8.0.0\" },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://gitlab.xxx.com/msd/leak-scan/tree/master\"\n  },\n  \"private\": true,\n  \"originTemplate\": \"@alifd/scaffold-lite-js\"\n}\n"},{"path":"src/routes.js","content":"import $ from '@/pages/$';\n\nimport BasicLayout from '@/layouts/BasicLayout';\n\nconst routerConfig = [\n  {\n    path: '/',\n    component: BasicLayout,\n    children: [\n      {\n        path: '',\n        component: $,\n      },\n    ],\n  },\n];\n\nexport default routerConfig;\n"},{"path":"src/app.js","content":"import { createApp } from 'ice';\n\nconst appConfig = {\n  app: {\n    rootId: 'app',\n  },\n  router: {\n    type: 'hash',\n  },\n};\ncreateApp(appConfig);\n"},{"path":"src/constants.js","content":"const __$$constants = {};\n\nexport default __$$constants;\n"},{"path":"src/utils.js","content":"import { createRef } from 'react';\n\nexport class RefsManager {\n  constructor() {\n    this.refInsStore = {};\n  }\n\n  clearNullRefs() {\n    Object.keys(this.refInsStore).forEach((refName) => {\n      const filteredInsList = this.refInsStore[refName].filter(\n        (insRef) => !!insRef.current\n      );\n      if (filteredInsList.length > 0) {\n        this.refInsStore[refName] = filteredInsList;\n      } else {\n        delete this.refInsStore[refName];\n      }\n    });\n  }\n\n  get(refName) {\n    this.clearNullRefs();\n    if (this.refInsStore[refName] && this.refInsStore[refName].length > 0) {\n      return this.refInsStore[refName][0].current;\n    }\n\n    return null;\n  }\n\n  getAll(refName) {\n    this.clearNullRefs();\n    if (this.refInsStore[refName] && this.refInsStore[refName].length > 0) {\n      return this.refInsStore[refName].map((i) => i.current);\n    }\n\n    return [];\n  }\n\n  linkRef(refName) {\n    const refIns = createRef();\n    this.refInsStore[refName] = this.refInsStore[refName] || [];\n    this.refInsStore[refName].push(refIns);\n    return refIns;\n  }\n}\n\nexport default {};\n"},{"path":"src/i18n.js","content":"const i18nConfig = {\n  'zh-CN': {\n    'i18n-jwg27yo4': '你好 ',\n    'i18n-jwg27yo3': '{name} 博士',\n  },\n  'en-US': {\n    'i18n-jwg27yo4': 'Hello ',\n    'i18n-jwg27yo3': 'Doctor {name}',\n  },\n};\n\nlet locale =\n  typeof navigator === 'object' && typeof navigator.language === 'string'\n    ? navigator.language\n    : 'zh-CN';\n\nconst getLocale = () => locale;\n\nconst setLocale = (target) => {\n  locale = target;\n};\n\nconst isEmptyVariables = (variables) =>\n  (Array.isArray(variables) && variables.length === 0) ||\n  (typeof variables === 'object' &&\n    (!variables || Object.keys(variables).length === 0));\n\n// 按低代码规范里面的要求进行变量替换\nconst format = (msg, variables) =>\n  typeof msg === 'string'\n    ? msg.replace(/\\{(\\w+)\\}/g, (match, key) => variables?.[key] ?? '')\n    : msg;\n\nconst i18nFormat = ({ id, defaultMessage, fallback }, variables) => {\n  const msg =\n    i18nConfig[locale]?.[id] ??\n    i18nConfig[locale.replace('-', '_')]?.[id] ??\n    defaultMessage;\n  if (msg == null) {\n    console.warn('[i18n]: unknown message id: %o (locale=%o)', id, locale);\n    return fallback === undefined ? `${id}` : fallback;\n  }\n\n  return format(msg, variables);\n};\n\nconst i18n = (id, params) => {\n  return i18nFormat({ id }, params);\n};\n\n// 将国际化的一些方法注入到目标对象&上下文中\nconst _inject2 = (target) => {\n  target.i18n = i18n;\n  target.getLocale = getLocale;\n  target.setLocale = (locale) => {\n    setLocale(locale);\n    target.forceUpdate();\n  };\n  target._i18nText = (t) => {\n    // 优先取直接传过来的语料\n    const localMsg = t[locale] ?? t[String(locale).replace('-', '_')];\n    if (localMsg != null) {\n      return format(localMsg, t.params);\n    }\n\n    // 其次用项目级别的\n    const projectMsg = i18nFormat({ id: t.key, fallback: null }, t.params);\n    if (projectMsg != null) {\n      return projectMsg;\n    }\n\n    // 兜底用 use 指定的或默认语言的\n    return format(t[t.use || 'zh-CN'] ?? t.en_US, t.params);\n  };\n\n  // 注入到上下文中去\n  if (target._context && target._context !== target) {\n    Object.assign(target._context, {\n      i18n,\n      getLocale,\n      setLocale: target.setLocale,\n    });\n  }\n};\n\nexport { getLocale, setLocale, i18n, i18nFormat, _inject2 };\n"},{"path":"src/global.scss","content":"// 引入默认全局样式\n@import '@alifd/next/reset.scss';\n\nbody {\n  -webkit-font-smoothing: antialiased;\n}\n"},{"path":"src/layouts/BasicLayout/index.jsx","content":"\nimport React, { useState } from 'react';\nimport { Shell, ConfigProvider } from '@alifd/next';\nimport PageNav from './components/PageNav';\nimport Logo from './components/Logo';\nimport Footer from './components/Footer';\n\n(function() {\n  const throttle = function(type, name, obj = window) {\n    let running = false;\n\n    const func = () => {\n      if (running) {\n        return;\n      }\n\n      running = true;\n      requestAnimationFrame(() => {\n        obj.dispatchEvent(new CustomEvent(name));\n        running = false;\n      });\n    };\n\n    obj.addEventListener(type, func);\n  };\n\n  throttle('resize', 'optimizedResize');\n})();\n\nexport default function BasicLayout({ children }) {\n  const getDevice = width => {\n    const isPhone =\n      typeof navigator !== 'undefined' && navigator && navigator.userAgent.match(/phone/gi);\n\n    if (width < 680 || isPhone) {\n      return 'phone';\n    }\n    if (width < 1280 && width > 680) {\n      return 'tablet';\n    }\n    return 'desktop';\n  };\n\n  const [device, setDevice] = useState(getDevice(NaN));\n  window.addEventListener('optimizedResize', e => {\n    setDevice(getDevice(e && e.target && e.target.innerWidth));\n  });\n  return (\n    <ConfigProvider device={device}>\n      <Shell\n        type=\"dark\"\n        style={{\n          minHeight: '100vh',\n        }}\n      >\n        <Shell.Branding>\n          <Logo\n            text=\"低代码引擎\"\n          />\n        </Shell.Branding>\n        <Shell.Navigation\n          direction=\"hoz\"\n          style={{\n            marginRight: 10,\n          }}\n        ></Shell.Navigation>\n        <Shell.Action></Shell.Action>\n        <Shell.Navigation>\n          <PageNav />\n        </Shell.Navigation>\n\n        <Shell.Content>{children}</Shell.Content>\n        <Shell.Footer>\n          <Footer />\n        </Shell.Footer>\n      </Shell>\n    </ConfigProvider>\n  );\n}\n    "},{"path":"src/layouts/BasicLayout/menuConfig.js","content":"\nconst headerMenuConfig = [];\nconst asideMenuConfig = [\n  {\n    name: '首页',\n    path: '/',\n    icon: 'smile',\n  },\n];\nexport { headerMenuConfig, asideMenuConfig };\n    "},{"path":"src/layouts/BasicLayout/components/Footer/index.jsx","content":"\nimport React from 'react';\nimport styles from './index.module.scss';\n\nexport default function Footer() {\n  return (\n    <p className={styles.footer}>\n      <span className={styles.logo}>Alibaba Fusion</span>\n      <br />\n      <span className={styles.copyright}>© 2019-现在 Alibaba Fusion & ICE</span>\n    </p>\n  );\n}\n    "},{"path":"src/layouts/BasicLayout/components/Footer/index.module.scss","content":"\n.footer {\n  line-height: 20px;\n  text-align: center;\n}\n\n.logo {\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.copyright {\n  font-size: 12px;\n}\n    "},{"path":"src/layouts/BasicLayout/components/Logo/index.jsx","content":"\nimport React from 'react';\nimport { Link } from 'ice';\nimport styles from './index.module.scss';\n\nexport default function Logo({ text, url }) {\n  return (\n    <div className=\"logo\">\n      <Link to={url || '/'} className={styles.logo}>\n        <span>{text}</span>\n      </Link>\n    </div>\n  );\n}\n    "},{"path":"src/layouts/BasicLayout/components/Logo/index.module.scss","content":"\n.logo{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: $color-text1-1;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 22px;\n\n  &:visited, &:link {\n    color: $color-text1-1;\n  }\n\n  img {\n    height: 24px;\n    margin-right: 10px;\n  }\n}\n    "},{"path":"src/layouts/BasicLayout/components/PageNav/index.jsx","content":"\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'ice';\nimport { Nav } from '@alifd/next';\nimport { asideMenuConfig } from '../../menuConfig';\n\nconst { SubNav } = Nav;\nconst NavItem = Nav.Item;\n\nfunction getNavMenuItems(menusData) {\n  if (!menusData) {\n    return [];\n  }\n\n  return menusData\n    .filter(item => item.name && !item.hideInMenu)\n    .map((item, index) => getSubMenuOrItem(item, index));\n}\n\nfunction getSubMenuOrItem(item, index) {\n  if (item.children && item.children.some(child => child.name)) {\n    const childrenItems = getNavMenuItems(item.children);\n\n    if (childrenItems && childrenItems.length > 0) {\n      const subNav = (\n        <SubNav key={index} icon={item.icon} label={item.name}>\n          {childrenItems}\n        </SubNav>\n      );\n      return subNav;\n    }\n\n    return null;\n  }\n\n  const navItem = (\n    <NavItem key={item.path} icon={item.icon}>\n      <Link to={item.path}>{item.name}</Link>\n    </NavItem>\n  );\n  return navItem;\n}\n\nconst Navigation = (props, context) => {\n  const { location } = props;\n  const { pathname } = location;\n  const { isCollapse } = context;\n  return (\n    <Nav\n      type=\"primary\"\n      selectedKeys={[pathname]}\n      defaultSelectedKeys={[pathname]}\n      embeddable\n      openMode=\"single\"\n      iconOnly={isCollapse}\n      hasArrow={false}\n      mode={isCollapse ? 'popup' : 'inline'}\n    >\n      {getNavMenuItems(asideMenuConfig)}\n    </Nav>\n  );\n};\n\nNavigation.contextTypes = {\n  isCollapse: PropTypes.bool,\n};\nconst PageNav = withRouter(Navigation);\nexport default PageNav;\n    "},{"path":"src/pages/$/index.jsx","content":"// 注意: 出码引擎注入的临时变量默认都以 \"__$$\" 开头，禁止在搭建的代码中直接访问。\n// 例外：react 框架的导出名和各种组件名除外。\nimport React from 'react';\n\nimport {\n  ProDialog,\n  ProForm,\n  Filter,\n  ProTable,\n} from '@alifd/fusion-ui/lib/index.js';\n\nimport {\n  P as NextP,\n  Page as NextPage,\n  Block as NextBlock,\n  BlockCell as NextBlockCell,\n  RowColContainer as NextRowColContainer,\n  Row as NextRow,\n  Col as NextCol,\n} from '@alifd/pro-layout/lib/index.js';\n\nimport { FormInput } from '@alifd/fusion-ui';\n\nimport { Loading, Pagination } from '@alifd/next';\n\nimport { NextText } from '@alilc/lowcode-materials/lib/index.js';\n\nimport { createFetchHandler as __$$createFetchRequestHandler } from '@alilc/lowcode-datasource-fetch-handler';\n\nimport { create as __$$createDataSourceEngine } from '@alilc/lowcode-datasource-engine/runtime';\n\nimport utils, { RefsManager } from '../../utils';\n\nimport * as __$$i18n from '../../i18n';\n\nimport './index.css';\n\nimport '@alifd/pro-layout/lib/index.scss';\n\nimport '@alifd/next/lib/loading/style';\n\nimport '@alifd/next/lib/pagination/style';\n\nimport '@alilc/lowcode-materials/lib/style';\n\nclass $$Page extends React.Component {\n  _context = this;\n\n  _dataSourceConfig = this._defineDataSourceConfig();\n  _dataSourceEngine = __$$createDataSourceEngine(this._dataSourceConfig, this, {\n    runtimeConfig: true,\n    requestHandlersMap: { fetch: __$$createFetchRequestHandler() },\n  });\n\n  get dataSourceMap() {\n    return this._dataSourceEngine.dataSourceMap || {};\n  }\n\n  reloadDataSource = async () => {\n    await this._dataSourceEngine.reloadDataSource();\n  };\n\n  constructor(props, context) {\n    super(props);\n\n    this.utils = utils;\n\n    this._refsManager = new RefsManager();\n\n    __$$i18n._inject2(this);\n\n    this.state = {\n      loading: false,\n      accounts: [],\n      count: 0,\n      searchParams: {\n        account: '',\n      },\n      page: 1,\n      pageSize: 10,\n      currentOperateIndex: 0,\n      editForm: {\n        id: null,\n        account: '',\n        password: '',\n      },\n    };\n  }\n\n  $ = (refName) => {\n    return this._refsManager.get(refName);\n  };\n\n  $$ = (refName) => {\n    return this._refsManager.getAll(refName);\n  };\n\n  _defineDataSourceConfig() {\n    const _this = this;\n    return {\n      list: [\n        {\n          type: 'fetch',\n          isInit: function () {\n            return false;\n          },\n          options: function () {\n            return {\n              params: {},\n              method: 'GET',\n              isCors: true,\n              timeout: 5000,\n              headers: {},\n              uri: '/cms/api/account/list',\n            };\n          },\n          id: 'getList',\n          dataHandler: function (res) {\n            return res.data;\n          },\n        },\n        {\n          type: 'fetch',\n          isInit: function () {\n            return false;\n          },\n          options: function () {\n            return {\n              params: {},\n              method: 'GET',\n              isCors: true,\n              timeout: 5000,\n              headers: {},\n              uri: '/cms/api/account/delete',\n            };\n          },\n          id: 'delItem',\n        },\n        {\n          type: 'fetch',\n          isInit: function () {\n            return false;\n          },\n          options: function () {\n            return {\n              params: {},\n              method: 'POST',\n              isCors: true,\n              timeout: 5000,\n              headers: {},\n              uri: '/cms/api/account/edit',\n            };\n          },\n          id: 'editItem',\n        },\n        {\n          type: 'fetch',\n          isInit: function () {\n            return false;\n          },\n          options: function () {\n            return {\n              params: {},\n              method: 'POST',\n              isCors: true,\n              timeout: 5000,\n              headers: {},\n              uri: '/cms/api/account/add',\n            };\n          },\n          id: 'addItem',\n        },\n      ],\n    };\n  }\n\n  componentWillUnmount() {\n    console.log('will unmount');\n  }\n\n  getList(page) {\n    this.setState({\n      loading: true,\n      page,\n    });\n    this.dataSourceMap['getList']\n      .load({\n        page,\n        ...this.state.searchParams,\n      })\n      .then((res) => {\n        res.data.list.forEach((item) => {\n          item.f_created_at = moment\n            .unix(item.created_at)\n            .format('YYYY-MM-DD HH:mm:ss');\n        });\n        this.setState({\n          accounts: res.data.list,\n          count: res.data.count,\n        });\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  search() {\n    this.getList(1);\n  }\n\n  async operate(e, row, { type }) {\n    await this.setState({\n      currentOperateIndex: row.rowIndex,\n    });\n    if (type === 'delete') {\n      this.showDeleteModal();\n    } else if (type === 'edit') {\n      this.showEditModal();\n    } else if (type === 'add') {\n      this.showAddModal();\n    }\n  }\n\n  showDeleteModal() {\n    this.$('pro-dialog-entrylewu531p').open();\n  }\n\n  closeDeleteModal() {\n    this.$('pro-dialog-entrylewu531p').close();\n  }\n\n  delItem() {\n    const { accounts, currentOperateIndex } = this.state;\n    const item = accounts[currentOperateIndex];\n    this.dataSourceMap['delItem']\n      .load({\n        id: item.id,\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log('del success');\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        this.closeDeleteModal();\n        this.getList(this.state.page);\n      });\n  }\n\n  searchParamsChange(value, e, { field }) {\n    this.setState({\n      searchParams: {\n        ...this.state.searchParams,\n        [field]: value,\n      },\n    });\n  }\n\n  async searchParamsReset() {\n    await this.setState({\n      searchParams: {\n        account: '',\n      },\n    });\n    this.search();\n  }\n\n  showEditModal() {\n    const { accounts, currentOperateIndex } = this.state;\n    const item = accounts[currentOperateIndex];\n    this.setState({\n      editForm: {\n        id: item.id,\n        account: item.account,\n        password: item.password,\n      },\n    });\n    this.$('pro-dialog-entrylexjoe59').open();\n  }\n\n  closeEditModal() {\n    this.$('pro-dialog-entrylexjoe59').close();\n  }\n\n  onEditConfirm() {\n    const item = this.state.editForm;\n    this.dataSourceMap['editItem']\n      .load({\n        id: item.id,\n        account: item.account,\n        password: item.password,\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log('edit success');\n        this.closeEditModal();\n      });\n  }\n\n  onEditFormChange(value) {\n    this.setState({\n      editForm: {\n        ...value,\n        id: this.state.editForm.id,\n      },\n    });\n  }\n\n  showAddModal() {\n    this.setState({\n      addForm: {\n        account: '',\n        password: '',\n      },\n    });\n    this.$('pro-dialog-entrylexjoe80').open();\n  }\n\n  closeAddModal() {\n    this.$('pro-dialog-entrylexjoe80').close();\n  }\n\n  onAddConfirm() {\n    const item = this.state.addForm;\n    this.dataSourceMap['addItem']\n      .load({\n        id: item.id,\n        account: item.account,\n        password: item.password,\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log('add success');\n        this.closeAddModal();\n      });\n  }\n\n  onAddFormChange(value) {\n    this.setState({\n      addForm: {\n        ...value,\n      },\n    });\n  }\n\n  componentDidMount() {\n    this._dataSourceEngine.reloadDataSource();\n\n    console.log('did mount');\n    this.getList(this.state.page);\n  }\n\n  render() {\n    const __$$context = this._context || this;\n    const { state } = __$$context;\n    return (\n      <div\n        ref={this._refsManager.linkRef('outerView')}\n        style={{ height: '100%' }}\n      >\n        <ProDialog\n          status=\"success\"\n          size=\"small\"\n          prefix=\"next-\"\n          footerAlign=\"right\"\n          title=\"编辑\"\n          closeMode={['esc', 'close']}\n          hasMask={true}\n          align=\"cc cc\"\n          minMargin={40}\n          isAutoContainer={true}\n          visible={false}\n          iconType=\"prompt\"\n          explanation=\"提示文案\"\n          operationConfig={{ align: 'right' }}\n          operations={[\n            { action: 'ok', type: 'primary', content: '确认' },\n            { action: 'cancel', type: 'normal', content: '取消' },\n          ]}\n          ref={this._refsManager.linkRef('pro-dialog-entrylexjoe59')}\n          hasTips={false}\n          autoFocus={false}\n          style={{ position: 'fixed' }}\n          __events={{\n            eventDataList: [\n              {\n                type: 'componentEvent',\n                name: 'onOk',\n                relatedEventName: 'onAddConfirm',\n              },\n            ],\n            eventList: [\n              { name: 'onOk', disabled: true },\n              { name: 'onCancel', disabled: false },\n              { name: 'onClose', disabled: false },\n            ],\n          }}\n          onOk={function () {\n            return this.onEditConfirm.apply(\n              this,\n              Array.prototype.slice.call(arguments).concat([])\n            );\n          }.bind(this)}\n        >\n          <NextP\n            wrap={false}\n            type=\"body2\"\n            verAlign=\"middle\"\n            textSpacing={true}\n            align=\"left\"\n            prefix=\"\"\n            full={false}\n            flex={false}\n          >\n            <ProForm\n              placeholder=\"请在右侧面板添加表单项+\"\n              placeholderStyle={{\n                height: '38px',\n                color: '#0088FF',\n                background: '#d8d8d836',\n                border: 0,\n                gridArea: 'span 4 / span 4',\n              }}\n              columns={1}\n              labelCol={{ fixedSpan: 4 }}\n              labelAlign=\"left\"\n              emptyContent=\"添加表单项\"\n              ref={this._refsManager.linkRef('pro-form-entrylexjolw7')}\n              operations={[]}\n              size=\"medium\"\n              device=\"desktop\"\n              __events={{\n                eventDataList: [\n                  {\n                    type: 'componentEvent',\n                    name: 'onChange',\n                    relatedEventName: 'onEditFormChange',\n                  },\n                ],\n                eventList: [\n                  { name: 'saveField', disabled: false },\n                  { name: 'onSubmit', disabled: false },\n                  { name: 'onChange', disabled: true },\n                ],\n              }}\n              onChange={function () {\n                return this.onEditFormChange.apply(\n                  this,\n                  Array.prototype.slice.call(arguments).concat([])\n                );\n              }.bind(this)}\n            >\n              <FormInput\n                formItemProps={{\n                  primaryKey: '6782',\n                  label: '账号',\n                  size: 'medium',\n                  device: 'desktop',\n                  fullWidth: true,\n                  required: true,\n                  name: 'account',\n                }}\n                placeholder=\"请输入\"\n                defaultValue={__$$eval(() => this.state.editForm.account)}\n              />\n              <FormInput\n                formItemProps={{\n                  primaryKey: '1772',\n                  label: '密码',\n                  size: 'medium',\n                  device: 'desktop',\n                  fullWidth: true,\n                  required: true,\n                  name: 'password',\n                }}\n                placeholder=\"请输入\"\n                defaultValue={__$$eval(() => this.state.editForm.password)}\n              />\n            </ProForm>\n          </NextP>\n        </ProDialog>\n        <ProDialog\n          status=\"success\"\n          size=\"small\"\n          prefix=\"next-\"\n          footerAlign=\"right\"\n          title=\"新增\"\n          closeMode={['esc', 'close']}\n          hasMask={true}\n          align=\"cc cc\"\n          minMargin={40}\n          isAutoContainer={true}\n          visible={false}\n          iconType=\"prompt\"\n          explanation=\"提示文案\"\n          operationConfig={{ align: 'right' }}\n          operations={[\n            { action: 'ok', type: 'primary', content: '确认' },\n            { action: 'cancel', type: 'normal', content: '取消' },\n          ]}\n          ref={this._refsManager.linkRef('pro-dialog-entrylexjoe80')}\n          hasTips={false}\n          autoFocus={false}\n          style={{ position: 'fixed' }}\n          __events={{\n            eventDataList: [\n              {\n                type: 'componentEvent',\n                name: 'onOk',\n                relatedEventName: 'onAddConfirm',\n              },\n            ],\n            eventList: [\n              { name: 'onOk', disabled: true },\n              { name: 'onCancel', disabled: false },\n              { name: 'onClose', disabled: false },\n            ],\n          }}\n          onOk={function () {\n            return this.onAddConfirm.apply(\n              this,\n              Array.prototype.slice.call(arguments).concat([])\n            );\n          }.bind(this)}\n        >\n          <NextP\n            wrap={false}\n            type=\"body2\"\n            verAlign=\"middle\"\n            textSpacing={true}\n            align=\"left\"\n            prefix=\"\"\n            full={false}\n            flex={false}\n          >\n            <ProForm\n              placeholder=\"请在右侧面板添加表单项+\"\n              placeholderStyle={{\n                height: '38px',\n                color: '#0088FF',\n                background: '#d8d8d836',\n                border: 0,\n                gridArea: 'span 4 / span 4',\n              }}\n              columns={1}\n              labelCol={{ fixedSpan: 4 }}\n              labelAlign=\"left\"\n              emptyContent=\"添加表单项\"\n              ref={this._refsManager.linkRef('pro-form-entrylexjolw7')}\n              operations={[]}\n              size=\"medium\"\n              device=\"desktop\"\n              __events={{\n                eventDataList: [\n                  {\n                    type: 'componentEvent',\n                    name: 'onChange',\n                    relatedEventName: 'onEditFormChange',\n                  },\n                ],\n                eventList: [\n                  { name: 'saveField', disabled: false },\n                  { name: 'onSubmit', disabled: false },\n                  { name: 'onChange', disabled: true },\n                ],\n              }}\n              onChange={function () {\n                return this.onAddFormChange.apply(\n                  this,\n                  Array.prototype.slice.call(arguments).concat([])\n                );\n              }.bind(this)}\n            >\n              <FormInput\n                formItemProps={{\n                  primaryKey: '6782',\n                  label: '账号',\n                  size: 'medium',\n                  device: 'desktop',\n                  fullWidth: true,\n                  required: true,\n                  name: 'account',\n                }}\n                placeholder=\"请输入\"\n                defaultValue={__$$eval(() => this.state.editForm.account)}\n              />\n              <FormInput\n                formItemProps={{\n                  primaryKey: '1772',\n                  label: '密码',\n                  size: 'medium',\n                  device: 'desktop',\n                  fullWidth: true,\n                  required: true,\n                  name: 'password',\n                }}\n                placeholder=\"请输入\"\n                defaultValue={__$$eval(() => this.state.editForm.password)}\n              />\n            </ProForm>\n          </NextP>\n        </ProDialog>\n        <NextPage\n          headerDivider={true}\n          minHeight=\"100vh\"\n          presetNav={true}\n          presetAside={true}\n          footer={false}\n          nav={false}\n          aside={false}\n          placeholderStyle={{ gridRowEnd: 'span 1', gridColumnEnd: 'span 12' }}\n          headerProps={{ background: 'surface' }}\n          isTab={false}\n          contentAlignCenter={false}\n          contentProps={{ style: { background: 'rgba(255,255,255,0)' } }}\n          navProps={{ width: 200 }}\n          asideProps={{ width: 200 }}\n          background=\"lining\"\n          ref={this._refsManager.linkRef('nextpage-04429763')}\n        >\n          <NextBlock\n            placeholderStyle={{ height: '100%' }}\n            noPadding={false}\n            noBorder={false}\n            title=\"\"\n            rowGap={20}\n            colGap={20}\n            background=\"surface\"\n            layoutmode=\"O\"\n            strict={true}\n            colSpan={12}\n            rowSpan={1}\n            mode=\"transparent\"\n            childTotalColumns={12}\n            ref={this._refsManager.linkRef('nextblock-d61d61e9')}\n          >\n            <NextBlockCell\n              colSpan={12}\n              rowSpan={1}\n              mode=\"procard\"\n              isAutoContainer={true}\n              title=\"\"\n              hasDivider={true}\n              loading={false}\n              hasCollapse={false}\n              text={true}\n              operations={[]}\n              isFillContainer={true}\n            >\n              <NextRowColContainer rowGap={20} colGap={20}>\n                <NextRow>\n                  <NextCol colSpan={1}>\n                    <NextP\n                      wrap={false}\n                      type=\"body2\"\n                      verAlign=\"middle\"\n                      textSpacing={true}\n                      align=\"left\"\n                      prefix=\"\"\n                      full={false}\n                      flex={false}\n                    >\n                      <Filter\n                        labelAlign=\"left\"\n                        status=\"editable\"\n                        isPreview={false}\n                        cols={4}\n                        operations={[]}\n                        ref={this._refsManager.linkRef('filter-59d5c033')}\n                        labelTextAlign=\"right\"\n                        labelCol={{ fixedSpan: 4 }}\n                        className=\"\"\n                        __events={{\n                          eventDataList: [\n                            {\n                              type: 'componentEvent',\n                              name: 'onSearch',\n                              relatedEventName: 'search',\n                            },\n                            {\n                              type: 'componentEvent',\n                              name: 'onReset',\n                              relatedEventName: 'searchParamsReset',\n                            },\n                          ],\n                          eventList: [\n                            { name: 'onExpand', disabled: false },\n                            { name: 'onSearch', disabled: true },\n                            { name: 'onReset', disabled: true },\n                          ],\n                        }}\n                        onSearch={function () {\n                          return this.search.apply(\n                            this,\n                            Array.prototype.slice.call(arguments).concat([])\n                          );\n                        }.bind(this)}\n                        onReset={function () {\n                          return this.searchParamsReset.apply(\n                            this,\n                            Array.prototype.slice.call(arguments).concat([])\n                          );\n                        }.bind(this)}\n                      >\n                        <FormInput\n                          formItemProps={{\n                            primaryKey: 'id-4go81u',\n                            label: '账号',\n                            size: 'medium',\n                            columnSpan: 1,\n                            fullWidth: true,\n                            required: false,\n                            name: 'searchParams.account',\n                          }}\n                          placeholder=\"请输入\"\n                          __events={{\n                            eventDataList: [\n                              {\n                                type: 'componentEvent',\n                                name: 'onChange',\n                                relatedEventName: 'searchParamsChange',\n                                paramStr: '{\\n \\t \"field\": \"account\"\\n}',\n                              },\n                            ],\n                            eventList: [\n                              { name: 'onPressEnter', disabled: false },\n                              { name: 'onClear', disabled: false },\n                              { name: 'onChange', disabled: true },\n                              { name: 'onKeyDown', disabled: false },\n                              { name: 'onFocus', disabled: false },\n                              { name: 'onBlur', disabled: false },\n                            ],\n                          }}\n                          onChange={function () {\n                            return this.searchParamsChange.apply(\n                              this,\n                              Array.prototype.slice.call(arguments).concat([\n                                {\n                                  field: 'account',\n                                },\n                              ])\n                            );\n                          }.bind(this)}\n                        />\n                      </Filter>\n                    </NextP>\n                  </NextCol>\n                </NextRow>\n              </NextRowColContainer>\n            </NextBlockCell>\n          </NextBlock>\n          <NextBlock\n            placeholderStyle={{ height: '100%' }}\n            noPadding={false}\n            noBorder={false}\n            title=\"\"\n            rowGap={20}\n            colGap={20}\n            background=\"surface\"\n            layoutmode=\"O\"\n            strict={true}\n            colSpan={12}\n            rowSpan={1}\n            mode=\"transparent\"\n            childTotalColumns={12}\n            ref={this._refsManager.linkRef('nextblock-1b6d79fa')}\n          >\n            <NextBlockCell\n              colSpan={12}\n              rowSpan={1}\n              mode=\"procard\"\n              isAutoContainer={true}\n              title=\"\"\n              hasDivider={true}\n              loading={false}\n              hasCollapse={false}\n              text={true}\n              operations={[]}\n              isFillContainer={true}\n              ref={this._refsManager.linkRef('nextblockcell-c3d89ffd')}\n            >\n              <NextRowColContainer rowGap={20} colGap={20}>\n                <NextRow>\n                  <NextCol colSpan={1}>\n                    <NextP\n                      wrap={false}\n                      type=\"body2\"\n                      verAlign=\"middle\"\n                      textSpacing={true}\n                      align=\"left\"\n                      prefix=\"\"\n                      full={false}\n                      flex={false}\n                      ref={this._refsManager.linkRef('nextp-83ac7771')}\n                    >\n                      <Loading\n                        color=\"red\"\n                        prefix=\"next-\"\n                        tipAlign=\"bottom\"\n                        visible={__$$eval(() => this.state.loading)}\n                        size=\"large\"\n                        inline={true}\n                        _unsafe_MixedSetter_visible_select=\"ExpressionSetter\"\n                      >\n                        <ProTable\n                          dataSource={__$$eval(() => this.state.accounts)}\n                          actionColumnButtons={{\n                            dataSource: [\n                              {\n                                children: '编辑',\n                                type: 'normal',\n                                disabled: false,\n                                onClick: function () {\n                                  return this.operate.apply(\n                                    this,\n                                    Array.prototype.slice\n                                      .call(arguments)\n                                      .concat([\n                                        {\n                                          type: 'edit',\n                                        },\n                                      ])\n                                  );\n                                }.bind(this),\n                              },\n                              {\n                                children: '删除',\n                                type: 'primary',\n                                onClick: function () {\n                                  return this.operate.apply(\n                                    this,\n                                    Array.prototype.slice\n                                      .call(arguments)\n                                      .concat([\n                                        {\n                                          type: 'delete',\n                                        },\n                                      ])\n                                  );\n                                }.bind(this),\n                              },\n                            ],\n                            text: true,\n                            visibleButtonCount: 1,\n                          }}\n                          actionBarButtons={{\n                            dataSource: [\n                              {\n                                type: 'primary',\n                                children: '新增',\n                                onClick: function () {\n                                  return this.showAddModal.apply(\n                                    this,\n                                    Array.prototype.slice\n                                      .call(arguments)\n                                      .concat([])\n                                  );\n                                }.bind(this),\n                              },\n                            ],\n                            visibleButtonCount: 3,\n                            text: false,\n                          }}\n                          settingButtons={true}\n                          columns={[\n                            {\n                              title: 'id',\n                              formatType: 'text',\n                              dataIndex: 'id',\n                              _format_options_date: 'YYYY-MM-DD HH:mm:ss',\n                            },\n                            {\n                              title: '账号',\n                              dataIndex: 'account',\n                              width: 160,\n                              formatType: 'text',\n                              searchable: false,\n                              _format_options_date: 'YYYY-MM-DD HH:mm:ss',\n                            },\n                            {\n                              title: '密码',\n                              dataIndex: 'password',\n                              formatType: 'text',\n                              _format_options_date: 'YYYY-MM-DD HH:mm:ss',\n                            },\n                            {\n                              title: '创建时间',\n                              formatType: 'text',\n                              dataIndex: 'f_created_at',\n                              _format_options_date: 'YYYY-MM-DD HH:mm:ss',\n                            },\n                          ]}\n                          primaryKey=\"id\"\n                          actionColumnProps={{ title: '操作' }}\n                          indexColumn={false}\n                          hasBorder={false}\n                          isZebra={true}\n                          fixedHeader={false}\n                          _unsafe_MixedSetter_dataSource_select=\"ExpressionSetter\"\n                          size=\"medium\"\n                          ref={this._refsManager.linkRef('protable-3e23c30e')}\n                          _unsafe_MixedSetter_paginationProps_select=\"ObjectSetter\"\n                          paginationProps={{ hidden: true }}\n                        />\n                        <Pagination\n                          prefix=\"next-\"\n                          type=\"normal\"\n                          shape=\"normal\"\n                          size=\"medium\"\n                          defaultCurrent={__$$eval(() => this.state.page)}\n                          total={__$$eval(() => this.state.count)}\n                          pageShowCount={5}\n                          pageSize={__$$eval(() => this.state.pageSize)}\n                          pageSizePosition=\"start\"\n                          showJump={true}\n                          pageSizeSelector={false}\n                          hideOnlyOnePage={false}\n                          link=\"\"\n                          rtl=\"\"\n                          _unsafe_MixedSetter_total_select=\"VariableSetter\"\n                          __events={{\n                            eventDataList: [\n                              {\n                                type: 'componentEvent',\n                                name: 'onChange',\n                                relatedEventName: 'getList',\n                              },\n                            ],\n                            eventList: [\n                              {\n                                name: 'onChange',\n                                description:\n                                  '页码发生改变时的回调函数\\n@param {Number} current 改变后的页码数\\n@param {Object} e 点击事件对象',\n                                disabled: true,\n                              },\n                              {\n                                name: 'onPageSizeChange',\n                                description:\n                                  '每页显示记录数量改变时的回调函数\\n@param {Number} pageSize 改变后的每页显示记录数',\n                                disabled: false,\n                              },\n                            ],\n                          }}\n                          onChange={function () {\n                            return this.getList.apply(\n                              this,\n                              Array.prototype.slice.call(arguments).concat([])\n                            );\n                          }.bind(this)}\n                          style={{ textAlign: 'right', marginTop: '30px' }}\n                          ref={this._refsManager.linkRef('pagination-8cd850e6')}\n                        />\n                      </Loading>\n                    </NextP>\n                  </NextCol>\n                </NextRow>\n              </NextRowColContainer>\n            </NextBlockCell>\n          </NextBlock>\n        </NextPage>\n        <ProDialog\n          status=\"success\"\n          size=\"small\"\n          prefix=\"next-\"\n          footerAlign=\"right\"\n          title=\"删除\"\n          closeMode={['esc', 'close']}\n          hasMask={true}\n          align=\"cc cc\"\n          minMargin={40}\n          isAutoContainer={true}\n          visible={false}\n          iconType=\"prompt\"\n          explanation=\"提示文案\"\n          operationConfig={{\n            align: 'right',\n            fixed: false,\n            showSaveTime: false,\n          }}\n          operations={[\n            { action: 'ok', type: 'primary', content: '确认' },\n            { action: 'cancel', type: 'normal', content: '取消' },\n          ]}\n          ref={this._refsManager.linkRef('pro-dialog-entrylewu531p')}\n          dialogType=\"normal\"\n          hasTips={false}\n          autoFocus={false}\n          style={{ textAlign: 'left', position: 'fixed' }}\n          __events={{\n            eventDataList: [\n              {\n                type: 'componentEvent',\n                name: 'onOk',\n                relatedEventName: 'delItem',\n              },\n            ],\n            eventList: [\n              { name: 'onOk', disabled: true },\n              { name: 'onCancel', disabled: false },\n              { name: 'onClose', disabled: false },\n            ],\n          }}\n          onOk={function () {\n            return this.delItem.apply(\n              this,\n              Array.prototype.slice.call(arguments).concat([])\n            );\n          }.bind(this)}\n        >\n          <NextP\n            wrap={false}\n            type=\"body2\"\n            verAlign=\"middle\"\n            textSpacing={true}\n            align=\"left\"\n            prefix=\"\"\n            full={false}\n            flex={false}\n            ref={this._refsManager.linkRef('nextp-6975dce0')}\n          >\n            <NextText\n              type=\"inherit\"\n              mark={false}\n              code={false}\n              delete={false}\n              underline={false}\n              strong={false}\n              prefix=\"\"\n              classname=\"\"\n            >\n              是否确认删除？\n            </NextText>\n          </NextP>\n        </ProDialog>\n      </div>\n    );\n  }\n}\n\nexport default $$Page;\n\nfunction __$$eval(expr) {\n  try {\n    return expr();\n  } catch (error) {}\n}\n\nfunction __$$evalArray(expr) {\n  const res = __$$eval(expr);\n  return Array.isArray(res) ? res : [];\n}\n\nfunction __$$createChildContext(oldContext, ext) {\n  const childContext = {\n    ...oldContext,\n    ...ext,\n  };\n  childContext.__proto__ = oldContext;\n  return childContext;\n}\n"},{"path":"src/pages/$/index.css","content":"body {\n  font-size: 12px;\n}\n\n.button {\n  width: 100px;\n  color: #ff00ff;\n}\n"},{"path":"public/index.html","content":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge,chrome=1\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Ice App</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>\n"}]